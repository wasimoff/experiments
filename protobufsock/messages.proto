// best practices: https://protobuf.dev/programming-guides/dos-donts/
syntax = "proto3";

// pbjs -t static-module -w commonjs -o frontend/src/messages.js messages.proto 
// pbts -o frontend/src/messages.d.ts frontend/src/messages.js 

option go_package = "./main";

import "google/protobuf/any.proto";

message Envelope {

  // sequence number of the message
  uint64 id = 1;

  // message type for handler routing
  enum MessageType { UNKNOWN = 0; Req = 1; Res = 2; Ev = 3; }
  MessageType type = 2;

  // embedded payload (switch on @type)
  google.protobuf.Any payload = 3;

}

// The request message containing the user's name.
message HelloRequest {
	string name = 1;
}

// The response message containing the greetings.
message HelloReply {
	string message = 1;
}

// Just a note, which expects no answer.
message HelloNote {
  string note = 1;
}

// used for benchmarking
message Counter {
  uint64 seq = 1;
  bytes noise = 2;
}

// --------------------------------

message OneOfEnvelope {
  oneof message {
    Request request = 1;
    Response response = 2;
    Event event = 3;
  }
}

message AnyEnvelope {
  // message type for handler routing
  enum MessageType { UNKNOWN = 0; Req = 1; Res = 2; Ev = 3; }
  MessageType type = 2;
  // embedded payload
  google.protobuf.Any payload = 3;
}

message Request {
  uint64 seq = 1;
  // method is determined by payload type
  // any arguments are within
  google.protobuf.Any request = 2;
  // TODO: timeout etc.
}

message Response {
  uint64 seq = 1;
  string error = 2; // nil => ok
  google.protobuf.Any response = 3;
}

message Event {
  google.protobuf.Any event = 1;
}